{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","alert","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cACpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACQ,sBAAMC,SAXO,SAAEC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,EAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAEtCC,MAAM,wBAKN,SACA,uBACIC,KAAK,OACLC,MAAOV,EACPW,SAnBc,SAAER,GACxBF,EAAcE,EAAES,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCYLO,G,MAVK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE1B,OACI,sBAAKc,UAAU,oDAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAKA,SCmBFO,EAtBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACf,ECFwB,SAAEA,GAC1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAXAC,qBAAU,WAENxB,EAASC,GAAWwB,MAAK,SAAAC,GACjBH,EAAS,CACLf,KAAMkB,EAAML,SAAS,SAIlC,CAACpB,IAGGqB,EDhBwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,+CAAd,SAA8DhB,IAE7DoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEAH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEgBNgB,EA3BM,WACjB,MAAoC1C,mBAAS,CAAC,YAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAKA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAExB,6BAEQ4C,EAAWnB,KAAK,SAAAT,GAAQ,OAEvB,cAAC,EAAD,CACAA,SAAWA,GACNA,QAKlB,2B,MCtBZ6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.fe12bdce.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n    const [inputValue, setinputValue] = useState('')\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handlesubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats])\r\n        }else{\r\n            alert(\"Categoria muy corta\")\r\n        }\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={handlesubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories :PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=320EPkfe5lb2DOyi6S0cyTT3KiNcCnil&q=${ encodeURI(category) }&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport \"animate.css\"\r\nconst GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInRight\">\r\n            <img src={ url } alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>         \r\n        <h3 className=\"animate__animated animate__lightSpeedInRight\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n        {\r\n        images.map( img => (\r\n            <GifGridItem \r\n            key={img.id}\r\n            {...img}\r\n            />\r\n        ))}\r\n    </div>\r\n    </>\r\n       \r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category ).then(imgs => {  \r\n                setstate({\r\n                    data: imgs, loading: false\r\n                });  \r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n    \r\n}","import React, {useState} from 'react'\r\nimport \"./components/AddCategory\"\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Mustang']);\r\n\r\n    //const handleAdd = () => {\r\n      //  setCategories([...categories, 'Ignis']);\r\n   // }\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            {\r\n                <ol>\r\n                    {\r\n                        categories.map( category => \r\n                         (\r\n                         <GifGrid \r\n                         category= {category}\r\n                         key={category}/>\r\n                         ))\r\n                    }\r\n                </ol>          \r\n            }\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport \"./index.css\";\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}